name: Setup Dependabot Configuration

on:
  workflow_call:
    inputs:
      # Opci√≥n 1: Single ecosystem (modo legacy)
      package_ecosystem:
        required: false
        type: string
        description: 'Single package ecosystem'
      
      directory:
        required: false
        type: string
        default: '/'
        description: 'Directory path (for single ecosystem mode)'
      
      # Opci√≥n 2: Multiple ecosystems (modo recomendado)
      ecosystems_config:
        required: false
        type: string
        description: 'JSON array of ecosystem configurations'
      
      # Shared settings
      schedule_interval:
        required: false
        type: string
        default: 'weekly'
      
      allow_major_versions:
        required: false
        type: boolean
        default: false
      
      open_pull_requests_limit:
        required: false
        type: number
        default: 5
      
      target_branch:
        required: false
        type: string
        default: ''
      
      commit_message_prefix:
        required: false
        type: string
        default: 'chore'
      
      labels:
        required: false
        type: string
        default: 'dependencies'
      
      reviewers:
        required: false
        type: string
        default: ''
      
      assignees:
        required: false
        type: string
        default: ''
      
      milestone:
        required: false
        type: number
        default: 0
      
      versioning_strategy:
        required: false
        type: string
        default: 'auto'
      
      rebase_strategy:
        required: false
        type: string
        default: 'auto'

jobs:
  setup-dependabot:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      pull-requests: read
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          ref: ${{ inputs.target_branch || github.event.repository.default_branch }}
          token: ${{ secrets.GITHUB_TOKEN }}
          fetch-depth: 0
      
      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'
      
      - name: Install dependencies
        run: pip install --quiet PyYAML
      
      - name: Generate Dependabot configuration
        id: generate
        run: |
          python3 << 'PYTHON_SCRIPT'
          import yaml
          import json
          import os
          import sys
          from pathlib import Path
          
          # Determine if using single or multiple ecosystem mode
          single_ecosystem = "${{ inputs.package_ecosystem }}"
          multi_config = """${{ inputs.ecosystems_config }}"""
          
          # Parse configurations
          configs = []
          
          if multi_config.strip():
              # Multiple ecosystems mode
              try:
                  configs = json.loads(multi_config)
                  print(f"::notice::Processing {len(configs)} ecosystem configurations")
              except json.JSONDecodeError as e:
                  print(f"::error::Invalid JSON in ecosystems_config: {e}")
                  sys.exit(1)
          elif single_ecosystem:
              # Single ecosystem mode (legacy)
              configs = [{
                  'ecosystem': single_ecosystem,
                  'directory': "${{ inputs.directory }}",
                  'pr_limit': int("${{ inputs.open_pull_requests_limit }}"),
                  'labels': "${{ inputs.labels }}",
                  'commit_prefix': "${{ inputs.commit_message_prefix }}"
              }]
              print("::notice::Processing single ecosystem configuration (legacy mode)")
          else:
              print("::error::Either package_ecosystem or ecosystems_config must be provided")
              sys.exit(1)
          
          # Shared settings
          schedule_interval = "${{ inputs.schedule_interval }}"
          allow_major = "${{ inputs.allow_major_versions }}" == "true"
          target_branch = "${{ inputs.target_branch }}" or "${{ github.event.repository.default_branch }}"
          default_branch = "${{ github.event.repository.default_branch }}"
          reviewers = [r.strip() for r in "${{ inputs.reviewers }}".split(',') if r.strip()]
          assignees = [a.strip() for a in "${{ inputs.assignees }}".split(',') if a.strip()]
          milestone = int("${{ inputs.milestone }}")
          versioning_strategy = "${{ inputs.versioning_strategy }}"
          rebase_strategy = "${{ inputs.rebase_strategy }}"
          
          # Initialize config structure
          dependabot_config = {
              'version': 2,
              'updates': []
          }
          
          # Process each ecosystem
          for config in configs:
              ecosystem = config.get('ecosystem')
              directory = config.get('directory', '/')
              pr_limit = config.get('pr_limit', int("${{ inputs.open_pull_requests_limit }}"))
              
              # Parse labels (can be string or list)
              labels_input = config.get('labels', "${{ inputs.labels }}")
              if isinstance(labels_input, str):
                  labels = [l.strip() for l in labels_input.split(',') if l.strip()]
              else:
                  labels = labels_input
              
              commit_prefix = config.get('commit_prefix', "${{ inputs.commit_message_prefix }}")
              
              # Build update entry
              update_entry = {
                  'package-ecosystem': ecosystem,
                  'directory': directory,
                  'schedule': {'interval': schedule_interval},
                  'open-pull-requests-limit': pr_limit
              }
              
              # Add optional fields
              if target_branch and target_branch != default_branch:
                  update_entry['target-branch'] = target_branch
              
              if labels:
                  update_entry['labels'] = labels
              
              if reviewers:
                  update_entry['reviewers'] = reviewers
              
              if assignees:
                  update_entry['assignees'] = assignees
              
              if milestone > 0:
                  update_entry['milestone'] = milestone
              
              if versioning_strategy != 'auto':
                  update_entry['versioning-strategy'] = versioning_strategy
              
              if rebase_strategy != 'auto':
                  update_entry['rebase-strategy'] = rebase_strategy
              
              # Add commit message configuration
              update_entry['commit-message'] = {'prefix': commit_prefix}
              
              # Add ignore rules for major versions
              if not allow_major:
                  update_entry['ignore'] = [
                      {
                          'dependency-name': '*',
                          'update-types': ['version-update:semver-major']
                      }
                  ]
              
              dependabot_config['updates'].append(update_entry)
              print(f"::notice::‚úÖ Added configuration for {ecosystem} in {directory}")
          
          # Write configuration
          config_path = Path('.github/dependabot.yml')
          config_dir = Path('.github')
          config_dir.mkdir(exist_ok=True)
          
          class CustomDumper(yaml.SafeDumper):
              def increase_indent(self, flow=False, indentless=False):
                  return super(CustomDumper, self).increase_indent(flow, False)
          
          with open(config_path, 'w') as f:
              yaml.dump(dependabot_config, f, 
                       Dumper=CustomDumper,
                       default_flow_style=False,
                       sort_keys=False,
                       width=1000,
                       allow_unicode=True)
          
          print(f"::notice::üìù Configuration written to {config_path}")
          print("\nüìã Generated configuration:")
          print(yaml.dump(dependabot_config, default_flow_style=False, sort_keys=False))
          
          # Set output
          with open(os.environ['GITHUB_OUTPUT'], 'a') as f:
              f.write(f"config_path={config_path}\n")
              f.write(f"ecosystems_count={len(configs)}\n")
          PYTHON_SCRIPT
      
      - name: Validate generated YAML
        run: |
          python3 << 'PYTHON_SCRIPT'
          import yaml
          from pathlib import Path
          
          config_path = Path('.github/dependabot.yml')
          
          try:
              with open(config_path, 'r') as f:
                  config = yaml.safe_load(f)
              
              assert config.get('version') == 2, "Invalid version"
              assert isinstance(config.get('updates'), list), "Updates must be a list"
              assert len(config['updates']) > 0, "At least one update required"
              
              for update in config['updates']:
                  assert 'package-ecosystem' in update
                  assert 'directory' in update
                  assert 'schedule' in update
                  assert 'interval' in update['schedule']
              
              print("::notice::‚úÖ YAML validation passed")
          except Exception as e:
              print(f"::error::YAML validation failed: {e}")
              exit(1)
          PYTHON_SCRIPT
      
      - name: Commit and push changes
        uses: stefanzweifel/git-auto-commit-action@v5
        with:
          commit_message: |
            ${{ inputs.commit_message_prefix }}: configure Dependabot for ${{ steps.generate.outputs.ecosystems_count }} ecosystem(s)
            
            This commit configures Dependabot for multiple package ecosystems.
            
            [skip ci]
          file_pattern: '.github/dependabot.yml'
          commit_user_name: 'github-actions[bot]'
          commit_user_email: 'github-actions[bot]@users.noreply.github.com'
          branch: ${{ inputs.target_branch || github.event.repository.default_branch }}
      
      - name: Generate summary
        if: always()
        run: |
          cat >> $GITHUB_STEP_SUMMARY << 'EOF'
          ## ü§ñ Dependabot Configuration
          
          ‚úÖ Successfully configured **${{ steps.generate.outputs.ecosystems_count }}** ecosystem(s)
          
          ### üìç Next Steps
          
          1. [View Configuration](https://github.com/${{ github.repository }}/blob/${{ inputs.target_branch || github.event.repository.default_branch }}/.github/dependabot.yml)
          2. [Monitor Updates](https://github.com/${{ github.repository }}/network/updates)
          3. [Review PRs](https://github.com/${{ github.repository }}/pulls?q=is%3Apr+author%3Aapp%2Fdependabot)
          EOF
